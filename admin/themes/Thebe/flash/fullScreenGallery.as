package  {	import net.slideshowpro.slideshowpro.*;	import flash.external.ExternalInterface;	import flash.display.StageScaleMode;	import flash.display.StageAlign;	import flash.events.Event; 	import flash.display.*;	public class fullScreenGallery {		private var m_ssp:SlideShowPro;		private var m_totalImgs:Number;		private var m_currentImgNumber:Number;				// //////////////////////////////////////////////////////////////		/**		* Initialize the gallery		* @param <SlideShowPro> A reference to a slideshowpro instance		* @param <String> A reference to a slideshowpro instance		* @param <int> Sepcify an gallery to start on, or set to 0		* @param <int> Start image (must specify start gallery is this is set), specify a starting image, or set to 0		* @param <boolean> noCache = if true, add a random string to the end of the filename to bust the cache		*/		public function fullScreenGal() {																}								// /////////////////////////////////////////////////////////////		public function setup(ssp:SlideShowPro, xmlFilePath:String, startGal:int, startImg:int, noCache:Boolean) {						m_ssp = ssp;									var xmlFile:String = "images/xml/images.xml";  						// Add a random string to the end of the filename to bust the cache, if required			if (noCache){				var d:Date = new Date();  				var cacheBust:String = "&rn=" + d.getTime() + (Math.random()*100); 				xmlFilePath = xmlFilePath + cacheBust; 			}			m_ssp.xmlFilePath =  xmlFilePath;												// Add external interfaces.....			ExternalInterface.addCallback("loadGallery", loadGallery);  			ExternalInterface.addCallback("nextImage", nextImage);  			ExternalInterface.addCallback("prevImage", prevImage);  			ExternalInterface.addCallback("loadImage", loadImage);  			ExternalInterface.addCallback("togglePlay", togglePlay);  						// Setup listeners for 			m_ssp.addEventListener(SSPModePlaybackEvent.DISPLAY_MODE, onModePlaybackEvent);			m_ssp.addEventListener(SSPDataEvent.ALBUM_DATA, onAlbumData);			m_ssp.addEventListener(SSPDataEvent.IMAGE_DATA, onImageData);						// Go to requested gallery/image			if (startGal != 0 && startImg == 0){				m_ssp.setStartAlbum(startGal,0); 							}			if (startGal != 0 && startImg != 0){				m_ssp.setStartAlbum(startGal, startImg); 							}//			m_ssp.toggleDisplayMode("Manual");						}				// /////////////////////////////////////////////////////////////				/**		* Setup listener for ALBUM_DATA event		* Grabs total number of images in this album		*/		public function onAlbumData(event:SSPDataEvent) {			if (event.type=="albumData") {				m_totalImgs = event.data.totalImages;			}		}				// /////////////////////////////////////////////////////////////				/**		* Setup listener for IMAGE_DATA event		* Tracks what number image is currently loaded		*/				public function onImageData(event:SSPDataEvent) {			if (event.type=="imageData") {				m_currentImgNumber = event.data.number;				ExternalInterface.call("cgpGallery.onImageLoaded", m_currentImgNumber, event.data.title, event.data.caption, event.data.url_title, "spGallery");			}		}				// /////////////////////////////////////////////////////////////				public function onModePlaybackEvent(event:SSPModePlaybackEvent) {			ExternalInterface.call("cgpGallery.onPlaybackModeChanged", event.mode, "spGallery");			}				// /////////////////////////////////////////////////////////////				public function loadGallery(gal_name:String):void {			//m_ssp.loadAlbum(gal_no,0);  			m_ssp.loadAlbum(gal_name,0);		}				// /////////////////////////////////////////////////////////////				public function togglePlay():void {			m_ssp.toggleDisplayMode(null);			}				// /////////////////////////////////////////////////////////////				public function loadImage(image_no:Number){			if (image_no <= m_totalImgs && image_no > 0) {				// load next image				m_ssp.loadImageNumber(image_no);			} 		}				// /////////////////////////////////////////////////////////////				public function nextImage():void {			if (m_currentImgNumber < m_totalImgs) {				// load next image				m_ssp.nextImage();			} else {				// load first image in album				m_ssp.loadImageNumber(0);			}		}				// /////////////////////////////////////////////////////////////				public function prevImage():void {					if (m_currentImgNumber >= 2) {				// load previous image				m_ssp.previousImage();			} 			else {				// load last image in album				m_ssp.loadImageNumber(m_totalImgs-1);			}		}	}	}