package {     import flash.display.Sprite;     import flash.events.*;      import flash.net.FileFilter;     import flash.net.FileReference;     import flash.net.URLRequest;     import flash.utils.ByteArray; 	import flash.external.ExternalInterface;	    public class LocalFileReader extends Sprite     {         private var fileRef:FileReference; 		        public function LocalFileReader()         { 			ExternalInterface.call('LocalFileReader.onMessage','LocalFileReader...');            fileRef = new FileReference();             fileRef.addEventListener(Event.SELECT, onFileSelected);             fileRef.addEventListener(Event.CANCEL, onCancel);             fileRef.addEventListener(IOErrorEvent.IO_ERROR, onIOError);             fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError);             var textTypeFilter:FileFilter = new FileFilter("Data Files (*.txt, *.rtf, *.xml. *.csv)", "*.txt;*.rtf; *.xml; *.csv"); 			ExternalInterface.call('LocalFileReader.onMessage','Calling browse...');        			try {				fileRef.browse([textTypeFilter]); 			} 			catch (error:SecurityError) {				ExternalInterface.call('LocalFileReader.onError','Security error...'+error.toString());			} 			catch (error:Error) {				ExternalInterface.call('LocalFileReader.onError','Error...'+error.toString());			}				        } 		        public function onFileSelected(evt:Event):void         {             fileRef.addEventListener(ProgressEvent.PROGRESS, onProgress);             fileRef.addEventListener(Event.COMPLETE, onComplete); 			ExternalInterface.call("LocalFileReader.onFileSelected", fileRef.name, fileRef.size, fileRef.type);            fileRef.load();         }          public function onProgress(evt:ProgressEvent):void         {             //trace("Loaded " + evt.bytesLoaded + " of " + evt.bytesTotal + " bytes."); 			ExternalInterface.call("LocalFileReader.onProgress", evt.bytesLoaded, evt.bytesTotal);        }          public function onComplete(evt:Event):void         {             //trace("File was successfully loaded.");             //trace(fileRef.data); 			// Get the data from the file as a ByteArray			var data:ByteArray = fileRef.data;						ExternalInterface.call("LocalFileReader.onLoaded", data.readUTFBytes(data.bytesAvailable));        }          public function onCancel(evt:Event):void         {             //trace("The browse request was canceled by the user.");         }          public function onIOError(evt:IOErrorEvent):void         {             //trace("There was an IO Error."); 			ExternalInterface.call("LocalFileReader.onError", "There was an IO Error.");        }		        public function onSecurityError(evt:Event):void         {             //trace("There was a security error.");			ExternalInterface.call("LocalFileReader.onError", "There was a security error.");		    //ExternalInterface.call("FlashUploader.statusMsg", ("SecurityError: " + file.name + " ErrorString: " + errorString, "Error"));        }     } }